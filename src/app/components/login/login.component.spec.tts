// Strange problem with the import of ApiService TODO 

import { ComponentFixture, TestBed } from '@angular/core/testing';
import { RouterTestingModule } from '@angular/router/testing';
import { Router } from '@angular/router';
import { LoginComponent } from './login.component';
import { LoginRequest } from 'src/app/types/login.request';
import { ApiService } from 'src/app/services/api.service';

describe('LoginComponent', () => {
  let component: LoginComponent;
  let fixture: ComponentFixture<LoginComponent>;
  let apiService: ApiService;
  let router: Router;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [RouterTestingModule],
      declarations: [LoginComponent],
      providers: [ApiService]
    }).compileComponents();

    fixture = TestBed.createComponent(LoginComponent);
    component = fixture.componentInstance;
    apiService = TestBed.inject(ApiService);
    router = TestBed.inject(Router);
  });

  it('should initialize with empty login request and error message', () => {
    fixture.detectChanges();

    expect(component.loginRequest).toEqual({ username: '', password: '' });
    expect(component.errorMessage).toBe('');
  });

  it('should call login API and navigate to group selection on successful login', () => {
    const loginRequest: LoginRequest = { username: 'test', password: 'password' };
    spyOn(apiService, 'login').and.returnValue(Promise.resolve());
    const navigateSpy = spyOn(router, 'navigate');
    component.loginRequest = loginRequest;

    component.login();

    expect(apiService.login).toHaveBeenCalledWith(loginRequest);
    expect(component.errorMessage).toBe('');
    expect(navigateSpy).toHaveBeenCalledWith(['/group-selection']);
  });

  it('should display error message on failed login', async () => {
    const loginRequest: LoginRequest = { username: 'test', password: 'password' };
    const errorMessage = 'Invalid username or password';
    spyOn(apiService, 'login').and.returnValue(Promise.reject(errorMessage));
    component.loginRequest = loginRequest;
    
    component.login();

    expect(apiService.login).toHaveBeenCalledWith(loginRequest);
    await fixture.whenStable();
    expect(component.errorMessage).toBe(errorMessage);
  });
});